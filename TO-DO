Completed Items

- A function panel. The panel should include a list of defined functions.
  Drag and drop support.
- Add --open-arduino-diagram option.
- Add newly-created projects to Recent Files menu.
- Add widget actions to Edit menu. No. Instead, Shift key and the
  primary mouse button should display the object's context menu.
- Alignment panel. The panel must allow interaction with separated windows.
  Per diagram.
- Alignment tool should be a child of the view's window.
- Allow opening of multiple files.
- Allow setting of function names.
- Apply canvas settings.
- Assign new names to functions pasted on main canvases.
- Close a function's Objects Alignment dialog if its editing window is closed.
- Close edit windows via Control + W.
- Command-line help.
- Confirm closing of changed separated windows.
- Confirmation prompt on closing of edited diagrams.
- Context menu on main tab widget.
- Context menus should be available as tools. See Tools Bar.
- Copy & paste.
- Copy Edit menu to child edit windows and separated windows.
  Redo / undo stack.
- Define databases.
- Depict changed pages. Window titles, etc.
- Depict cloned functions. Function definitions will contain labels having
  f symbols.
- Depict main functions via immutable themes.
- Detect scene boundaries and prevent placement outside of.
- Detect scene boundaries of object scenes.
- Display main() function. Fixed position? Yes.
- Do not align, stack, etc. unless coordinates would change.
- Do not clone pasted functions without parents unless they already exist.
- Do not delete function duplicates if one duplicate is removed.
- Do not discover parent functions for copied functions.
- Dragging an item onto a diagram and scroll bars.
- Error dialog.
- Exiting does not require closing of pages.
- Function names and deleted functions; uniqueness errors.
- Group delete.
- Inspect coordinates upon opening of diagrams. Adjust.
- List of recent files.
- Movement via arrows. Increase distance if Shift is depressed.
- Object numbers should be sequenced.
- Pass undo stack from top-level view to child views.
- Prepare Copy, Delete, Paste, and Select All states.
- Prepare parents after cloning objects.
- Raise currently-selected function via z-value. This will allow the function's
  combination box to float above other widgets.
- Recreating functions and unique names.
- Redo / undo function names.
- Redo / undo lock positions.
- Redo / undo shortcuts on edit windows.
- Redo / undo style sheets.
- Remove function clones.
- Remove functions from User Functions on redo / undo.
- Retain Tools Bar position.
- Retain loop(), setup () style sheets.
- Save As.
- Save canvas settings.
- Save loop() and setup() style sheets.
- Save position-locked property.
- Save, Save As on separated windows.
- Select all.
- Separate database objects when opening an existing diagram.
- Structures context menu on view object.
- Style sheets. User input is not validated.
- The name of the display in settings should be separate from the file name.
- Tools Bar?
- Unite separated windows.
- View separation.
- Warn of faulty home directory: read and write permissions.
- Warn of missing SQLite driver.
- Warn on diagram overwrite during initialization.
- glitch_canvas_settings::settings(). Not needed.
- setWindowIcon(windowIcon()) on child dialogs.

Ignored Items

- The glitch_view parent must be passed to every child.

Remaining Items

- All of Arduino's objects.
- Canvas background color redo / undo.
- Functions are defined on the main view. Allow multiple instances of
  a defined function. All duplicate instances should be duplicates of a single
  definition.
- Function parameters and return value.
- Icons and themes.
- Implement Arduino's loop().
- Implement Arduino's setup().
- Object-view settings.
- Paste in child views. Redo / undo.
- Proximity instead of wiring.
- Redo / undo. See also macros.
- Reparent support panels if a canvas is separated.
- Serial and stream (https://www.arduino.cc/reference/en).
- Shortcuts in object views.
- Some wiring is not required. Translating diagrams to Arduino source is
  based on a top-down interpretation.
- Translate diagrams to Arduino via Embedded LISP.
- Undo macros for group actions.
- Warn of recursive functions.
